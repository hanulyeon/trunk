package com.tmax.hyperdata.error;

import java.io.UnsupportedEncodingException;
import java.util.MissingResourceException;
import com.tmax.hyperdata.util.TbHdResourceBundle;

/****************************************************************************
 * Automatically generated by ".basename(GenErrorJava.pl)."
 *
 * !!! WARNING !!!
 * !!!   THIS IS AN AUTOMATICALLY GENERATED SCRIPT FILE !!!
 * !!!   DO NOT EDIT THIS FILE !!!
 *
 ****************************************************************************/

public class TbHdError {
    private final static String ERROR_FILE = "com.tmax.hyperdata.error.ErrorMessage";
    private static TbHdResourceBundle errorBundle = new TbHdResourceBundle(getBundleFileName());
    public static final String ERROR_STR_PREFIX = "HD";

    public static final int ERROR_DH_BASE = -0;

    public static final int FAILED_TO_CONNECTION = ERROR_DH_BASE - 0;
    public static final int FAILED_TO_RECOVERY = ERROR_DH_BASE - 1;
    public static final int FAILED_TO_LOGIN = ERROR_DH_BASE - 2;
    public static final int PARSE_FAIL_XML = ERROR_DH_BASE - 3;
    public static final int NOT_FOUND_REQUEST = ERROR_DH_BASE - 4;
    public static final int USER_DUPLICATED = ERROR_DH_BASE - 5;
    public static final int GROUP_DUPLICATED = ERROR_DH_BASE - 6;
    public static final int EXIST_IN_GROUP = ERROR_DH_BASE - 7;
    public static final int NONEXIST_PARAMETER = ERROR_DH_BASE - 8;
    public static final int UNSUPPORT_DATE_FORMAT = ERROR_DH_BASE - 9;
    public static final int NOT_INPUT_PARAMETER = ERROR_DH_BASE - 10;
    public static final int USER_ID_NOT_SPECIFIED = ERROR_DH_BASE - 11;
    public static final int DOMAIN_NOT_SPECIFIED = ERROR_DH_BASE - 12;
    public static final int DATA_SOURCE_NOT_SPECIFIED = ERROR_DH_BASE - 13;
    public static final int VIRTUAL_TABLE_NOT_SPECIFIED = ERROR_DH_BASE - 14;
    public static final int DATA_MODEL_NOT_SPECIFIED = ERROR_DH_BASE - 15;
    public static final int VIRTUAL_VIEW_NOT_SPECIFIED = ERROR_DH_BASE - 16;
    public static final int FLOW_NOT_SPECIFIED = ERROR_DH_BASE - 17;
    public static final int EXEC_FLOW_NOT_SPECIFIED = ERROR_DH_BASE - 18;
    public static final int FAIL_DB_META_CONNECTION = ERROR_DH_BASE - 19;
    public static final int FAIL_DB_EXEC_CONNECTION = ERROR_DH_BASE - 20;
    public static final int EXSIST_RESOURCE = ERROR_DH_BASE - 21;
    public static final int NOT_FOUND_RESOURCE = ERROR_DH_BASE - 22;
    public static final int ERROR_USER_NOT_PERMITTED = ERROR_DH_BASE - 23;
    public static final int INCORRECT_DBLINK_INFOR = ERROR_DH_BASE - 24;
    public static final int INCORRECT_EXT_FILE_INFO = ERROR_DH_BASE - 25;
    public static final int NOT_FOUND_DOMAIN_FOR_RESOURCE = ERROR_DH_BASE - 26;
    public static final int NOT_FOUND_DATASOURCE_FOR_RESOURCE = ERROR_DH_BASE - 27;
    public static final int NOT_FOUND_VIRTUALTABLE_FOR_RESOURCE = ERROR_DH_BASE - 28;
    public static final int NOT_FOUND_DATAMODEL_FOR_RESOURCE = ERROR_DH_BASE - 29;
    public static final int DONT_HAVE_PRIV_TO_READ_RESOURCE = ERROR_DH_BASE - 30;
    public static final int DONT_HAVE_PRIV_TO_EXEC_RESOURCE = ERROR_DH_BASE - 31;
    public static final int DONT_HAVE_PRIV_TO_WRITE_RESOURCE = ERROR_DH_BASE - 32;
    public static final int CANT_DELETE_SAME_USER = ERROR_DH_BASE - 33;
    public static final int NOT_FOUND_USER_FOR_DELETE = ERROR_DH_BASE - 34;
    public static final int NOT_FOUND_USER_FOR_LOGIN = ERROR_DH_BASE - 35;
    public static final int INCORRECT_QUERY = ERROR_DH_BASE - 36;
    public static final int NOT_FOUND_OBJECT = ERROR_DH_BASE - 37;
    public static final int FAIL_EXECUTE_QUERY = ERROR_DH_BASE - 38;
    public static final int FAIL_REQUEST_PROCESS = ERROR_DH_BASE - 39;
    public static final int FAIL_TO_CREATE_CACHE_TABLE = ERROR_DH_BASE - 40;
    public static final int FAIL_GRANT_DUPLICATE = ERROR_DH_BASE - 41;
    public static final int DISKSPACE_NOT_ENOUGH = ERROR_DH_BASE - 42;
    public static final int LIMIT_CONCURRENT_EXEC = ERROR_DH_BASE - 43;
    public static final int LIMIT_CONCURRENT_RESV = ERROR_DH_BASE - 44;
    public static final int INTERNAL_ERROR_SQL = ERROR_DH_BASE - 45;
    public static final int NOT_DATABASE = ERROR_DH_BASE - 46;
    public static final int NOT_FOUND_RESOURCE_FOR_UPDATE = ERROR_DH_BASE - 47;
    public static final int CANCEL_FOR_FLOW_INST_NOT_SPECIFIED = ERROR_DH_BASE - 48;
    public static final int DONT_HAVE_REQUIRED = ERROR_DH_BASE - 49;
    public static final int DUPLICATED_ROLE = ERROR_DH_BASE - 50;
    public static final int NOT_FOUND_RESOURCE_FOR_DELETE = ERROR_DH_BASE - 51;
    public static final int NOT_FOUND_RESV_FOR_DELETE = ERROR_DH_BASE - 52;
    public static final int NOT_FOUND_RESV_FOR_UPDATE = ERROR_DH_BASE - 53;
    public static final int NOT_FOUND_GROUP_FOR_DELETE = ERROR_DH_BASE - 54;
    public static final int NOT_FOUND_ROLE_FOR_DELETE = ERROR_DH_BASE - 55;
    public static final int EXIST_RUNNING_FLOW = ERROR_DH_BASE - 56;
    public static final int FAILED_EXEC_FLOW = ERROR_DH_BASE - 57;
    public static final int INVALID_CRON = ERROR_DH_BASE - 58;
    public static final int INVALID_VERSION = ERROR_DH_BASE - 59;
    public static final int JDBC_SVR_WARNING = ERROR_DH_BASE - 60;

    /**
     * 에러 파일(properties) 경로
     * @return ERROR_FILE path
     */
    public static String getBundleFileName() {
        return ERROR_FILE;
    }


    /**
     * 에러에 대한 메시지 반환
     * @param error
     * @return the errorMessage
     */
    public static String getMsg(int error) {
        try {
            return new String((errorBundle.getValue(error))
                    .getBytes("iso-8859-1"), "utf-8");
        }
        catch (MissingResourceException e) {
            return "Message key[" + TbHdResourceBundle.getKey(error) +
                    "] in Message files or Message file[" +
                    getBundleFileName() + "] is not found.";
        }
        catch (UnsupportedEncodingException e) {
            return "Message key[" + TbHdResourceBundle.getKey(error) +
                    "] in Message files or Message file[" +
                    getBundleFileName() + "] is not found.";
        }
    }

    /**
     * 에러에 대한 코드+메시지 반환
     * @param error
     * @return the errorCode + errorMessage
     */
    public static String getFullMsg(int error) {
        return ERROR_STR_PREFIX + TbHdResourceBundle.getKey(error) + ":" +
                getMsg(error);
    }
}